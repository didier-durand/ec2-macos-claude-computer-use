# source: https://gist.github.com/nnsnodnb/9a5346c8561208e45ff5177768ef5682
# https://w.amazon.com/bin/view/EC2-Mac-Instances/
# access: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-to-mac-instance.html
# Connection: https://community.aws/content/2duUtYq4ENzOLGLdEg0A3aeyCuj/ec2-mac-02-connect-to-an-ec2-mac-instance?lang=en

AWSTemplateFormatVersion: 2010-09-09

#role: arn:aws:iam::076516228660:role/bedrock-full-access-role

Parameters:

  HostId:
    Type: String
    Description: 'Host id'
    # Default: 'h-05cec09b41d1681aa' # MacOS CFN1
    # Default: 'h-01ffdad790a25a210' # MacOS CFN2
    Default: 'h-073d5194aaffa1a41' # MacOS CFN3

  AvailabilityZone:
    Type: String
    Description: 'Availability zone for dedicated host'
    Default: 'us-east-2c'

  Tenancy:
    Type: String
    Description: 'Tenancy for instance (= host required when dedicated host)'
    Default: 'host' # default | dedicated | host


  InstanceType:
    Type: String
    Description: 'Instance type (must match host instance type)'
    Default: 'mac1.metal'

  AmiId:
    Type: AWS::EC2::Image::Id
    Description: 'Base image id for MacOS'
    # Default: 'ami-02734e2276a65e7e2' # region: us-east-2 & name: amzn-ec2-macos-15.0-20241024-033206-arm64
    Default: 'ami-0e391b6fad97f1d4a' # region: us-east-2 & name: amzn-ec2-macos-15.0-20241024-230723 for x86

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: 'EC2 key for remote access'
    Default: 'macos-didduran-us-east-2'

Resources:

  Ec2Instance:
    Type: AWS::EC2::Instance
    #CreationPolicy:
    # ResourceSignal:
    #   Timeout: 'PT1H'
    Properties:
      HostId: !Ref HostId
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      Tenancy: !Ref Tenancy
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeleteOnTermination: 'true'
          DeviceIndex: 0
          GroupSet:
            - !Ref InstanceSecurityGroup
          SubnetId: !Ref Subnet1
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - 'cfn-macos-instance'
              - !GetAtt UniqueSuffix.Value
      UserData: !Base64
        Fn::Sub: |
          # allow remote screen sharing with MacOS VNC client
          sudo launchctl enable system/com.apple.screensharing
          sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist
          
          # brew install wget, aws-cli and Python 3.12
          brew upgrade
          brew install wget
          brew install aws-cli
          brew install python@3.12
          
          # install docker
          wget --no-check-certificate https://desktop.docker.com/mac/main/amd64/Docker.dmg
          sudo hdiutil attach Docker.dmg
          sudo /Volumes/Docker/Docker.app/Contents/MacOS/install
          sudo hdiutil detach /Volumes/Docker

          /usr/bin/pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
          #/usr/local/bin/cfn-signal -e $? --stack '${AWS::StackName}' --resource 'Ec2Instance' --region '${AWS::Region}'


  Ec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Join
            - '-'
            - - 'cfn-macos-instance-profile'
              - !GetAtt UniqueSuffix.Value
      Roles:
        - !Ref Ec2ExecutionRole

  Ec2ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
            - '-'
            - - 'cfn-macos-execution-role'
              - !GetAtt UniqueSuffix.Value
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'

  Ec2ExecutionPolicy:
    Type: 'AWS::IAM::RolePolicy'
    Properties:
      PolicyName: !Join
            - '-'
            - - 'cfn-macos-execution-policy'
              - !GetAtt UniqueSuffix.Value
      RoleName: !Ref Ec2ExecutionRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: 'Allow'# required by cfn-signal: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-helper-scripts-reference.html
            Action:
              - 'cloudformation:signalResource'
              - 'cloudformation:DescribeStackResource'
            Resource: '*'
          - Effect: 'Allow'
            Action: 'sts:*'
            Resource: '*'
          - Effect: 'Allow'
            Action: 'bedrock:*'
            Resource: '*'
          - Effect: 'Allow'
            Action:
              - 's3:Get*'
              - 's3:List*'
              - 's3:Describe*'
              - 's3-object-lambda:Get*'
              - 's3-object-lambda:List*'
            Resource: '*'

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Enable SSH access only'
      GroupName: !Join
            - '-'
            - - 'cfn-macos-sg'
              - !GetAtt UniqueSuffix.Value
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - CidrIp: '0.0.0.0/0'
          FromPort: 22  # ssh
          IpProtocol: tcp
          ToPort: 22
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - 'cfn-macos-sg'
              - !GetAtt UniqueSuffix.Value


  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - 'cfn-macos-vpc'
              - !GetAtt UniqueSuffix.Value

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      CidrBlock: '10.0.10.0/24'
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - 'cfn-macos-subnet'
              - !GetAtt UniqueSuffix.Value

  Igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - 'cfn-macos-igw'
              - !GetAtt UniqueSuffix.Value

  VpcIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref Igw
      VpcId: !Ref Vpc

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - 'cfn-macos-rtb'
              - !GetAtt UniqueSuffix.Value

  RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet1

  DefaultRoute:
    DependsOn: VpcIgwAttachment
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref Igw
      RouteTableId: !Ref RouteTable

  UniqueSuffix:
    Type: AWS::SSM::Parameter
    DeletionPolicy: Delete
    Properties:
      Type: 'String'
      Value: !Select [ 0, !Split [ '-', !Select [ 2, !Split [ /, !Ref AWS::StackId ] ] ] ]